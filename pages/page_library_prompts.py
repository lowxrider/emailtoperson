# pages/page_library_prompts.py

import streamlit as st
from utils.db import fetch_prompts, insert_prompt, update_prompt, delete_prompt

def main():
    st.title("üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    with st.expander("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç", expanded=False):
        new_desc = st.text_input("–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", key="new_desc")
        new_prompt = st.text_area("–¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞", key="new_prompt")
        if st.button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç"):
            if not new_desc or not new_prompt:
                st.error("–ü–æ–ª—è –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏")
            else:
                insert_prompt(new_desc, new_prompt)
                st.success("–ü—Ä–æ–º–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω")
                st.rerun()

    df = fetch_prompts()
    if df.empty:
        st.info("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –ø—É—Å—Ç–∞.")
        return

    for idx, row in df.iterrows():
        with st.expander(f"#{row['id']} ‚Äî {row['description']}", expanded=False):
            desc = st.text_input("–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", value=row['description'], key=f"desc_{row['id']}")
            prompt = st.text_area("–¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞", value=row['prompt'], key=f"prompt_{row['id']}", height=100)
            col1, col2 = st.columns(2)
            with col1:
                if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", key=f"save_{row['id']}"):
                    update_prompt(row['id'], desc, prompt)
                    st.info(f"–ü—Ä–æ–º–ø—Ç #{row['id']} –æ–±–Ω–æ–≤–ª—ë–Ω")
                    st.rerun()
            with col2:
                if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", key=f"del_{row['id']}"):
                    delete_prompt(row['id'])
                    st.success(f"–ü—Ä–æ–º–ø—Ç #{row['id']} —É–¥–∞–ª—ë–Ω")
                    st.rerun()

if __name__ == "__main__":
    main()
