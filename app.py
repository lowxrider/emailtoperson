import streamlit as st

st.set_page_config(page_title="Email to Person App", layout="wide")

# –õ–µ–≥–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –≤ —Å–∞–π–¥–±–∞—Ä–µ
st.sidebar.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM")

# API Key —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º/–æ—á–∏—Å—Ç–∫–æ–π
st.session_state.setdefault("openai_api_key", "")
st.session_state.setdefault("api_saved", False)
api_key = st.sidebar.text_input("OpenAI API Key", type="password", value=st.session_state.openai_api_key)
col1, col2 = st.sidebar.columns(2)

if col1.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"):
    st.session_state.openai_api_key = api_key
    st.session_state.api_saved = True
if col2.button("–û—á–∏—Å—Ç–∏—Ç—å"):
    st.session_state.openai_api_key = ""
    st.session_state.api_saved = False

# –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø–æ–ª—è: –∫—Ä–∞—Å–Ω—ã–º, –µ—Å–ª–∏ –ø—É—Å—Ç–æ; –∑–µ–ª—ë–Ω—ã–º, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
if not st.session_state.openai_api_key:
    st.sidebar.markdown(
        """
        <style>
        div[data-testid="stTextInput"] input {
            border: 2px solid #f44336 !important;
            box-shadow: 0 0 5px rgba(244, 67, 54, .5);
        }
        </style>
        """, unsafe_allow_html=True
    )
elif st.session_state.api_saved:
    st.sidebar.markdown(
        """
        <style>
        div[data-testid="stTextInput"] input {
            border: 2px solid #4CAF50 !important;
            box-shadow: 0 0 5px rgba(76, 175, 80, .5);
        }
        </style>
        """, unsafe_allow_html=True
    )

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏
for key, label, widget, opts in [
    ("temperature", "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (0‚Äì1)",      st.sidebar.slider,       {"min_value":0.0, "max_value":1.0, "step":0.01, "value":0.7}),
    ("top_p",       "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (top_p)",   st.sidebar.slider,       {"min_value":0.0, "max_value":1.0, "step":0.01, "value":0.3}),
    ("max_tokens",  "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤",     st.sidebar.number_input, {"min_value":1,   "max_value":4096,  "step":1,   "value":256}),
]:
    st.session_state.setdefault(key, opts["value"])
    st.session_state[key] = widget(label, value=st.session_state[key], **{k:v for k,v in opts.items() if k!="value"})

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
pages = [
    st.Page("pages/page_email_generator.py", title="‚úâÔ∏è Email Generator"),
    st.Page("pages/page_customers.py",       title="üë• –ö–ª–∏–µ–Ω—Ç—ã (CRM)"),
    st.Page("pages/page_library_prompts.py", title="üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤"),
    st.Page("pages/page_prompting.py",       title="ü§ñ –ü—Ä–æ–º–ø—Ç–∏–Ω–≥"),
]

st.navigation(pages=pages, position="sidebar", expanded=True).run()
